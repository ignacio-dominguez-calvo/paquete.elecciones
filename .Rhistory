help("descargar_Archivo")
leer_datos <- function(tipo_eleccion, año, mes, ambito,directorio = "./descargas/",tabla='05'){
directorio <- descargar_Archivo(tipo_eleccion,año,mes,ambito,directorio)
tablas_path <- system.file("extdata", "tablas_finales_2.xlsx", package = "yourpackage")
if( tabla == '11'|| tabla == '12'){
sheet_name = paste(tabla, "04aamm.DAT", sep = "")
}else{
sheet_name = paste(tabla, "xxaamm.DAT", sep = "")
}
tabla <- read_excel(file_path, sheet = sheet_name)
print(tabla)
return(FALSE)
ultimos_dos_digitos <- substr(año, nchar(año) - 1, nchar(año))
ruta<- paste(directorio,"05",tipo_eleccion,ultimos_dos_digitos,mes,".DAT",sep="")
print(ruta)
file_content <- readLines(ruta, encoding = 'UTF-8')
file_content <- iconv(file_content, "latin1", "UTF-8")
# Inicializar el dataframe vacío
df <- data.frame(tipo_eleccion = integer(),
año = integer(),
mes = integer(),
numero_vuelta = integer(),
codigo_CCAA = integer(),
codigo_provincia = integer(),
codigo_municipio = integer(),
num_distrito_municipal = integer(),
nombre = character(),
codigo_distrito_electoral = integer(),
codigo_partido_judicial = integer(),
codigo_diputacion_provincial = integer(),
codigo_comarca = integer(),
pablacion_derecho = integer(),
numero_mesas = integer(),
censo_INE = integer(),
censo_escrutinio = integer(),
censo_CERE = character(),
total_votantes_CERE = integer(),
votantes_primer_avance = integer(),
votantes_segundo_avance = integer(),
voto_blanco = integer(),
voto_nulo = integer(),
voto_a_candidatura = character(),
numero_escaños = integer(),
votos_afirmativos_referendum = integer(),
votos_negativos_referendum = integer(),
stringsAsFactors = FALSE)
# Recorrer cada línea en file_content
for(municipio in file_content) {
# Extraer valores de cada línea y asignar a las columnas correspondientes
tipo_eleccion <- as.integer(substr(municipio, 1, 2))
año <- as.integer(substr(municipio, 3, 6))
mes <- as.integer(substr(municipio, 7, 8))
numero_vuelta <- as.integer(substr(municipio, 9, 9))
codigo_CCAA <- as.integer(substr(municipio, 10, 11))
codigo_provincia <- as.integer(substr(municipio, 12, 13))
codigo_municipio <- as.integer(substr(municipio, 14, 16))
num_distrito_municipal <- as.integer(substr(municipio, 17, 18))
nombre <- substr(municipio, 19, 118)
codigo_distrito_electoral <- as.integer(substr(municipio, 119, 119))
codigo_partido_judicial <- as.integer(substr(municipio, 120, 122))
codigo_diputacion_provincial <- as.integer(substr(municipio, 123, 125))
codigo_comarca <- as.integer(substr(municipio, 126, 128))
pablacion_derecho <- as.integer(substr(municipio, 129, 136))
numero_mesas <- as.integer(substr(municipio, 137, 141))
censo_INE <- as.integer(substr(municipio, 142, 149))
censo_escrutinio <- as.integer(substr(municipio, 150, 157))
censo_CERE <- substr(municipio, 158, 165)
total_votantes_CERE <- as.integer(substr(municipio, 166, 173))
votantes_primer_avance <- as.integer(substr(municipio, 174, 181))
votantes_segundo_avance <- as.integer(substr(municipio, 182, 189))
voto_blanco <- as.integer(substr(municipio, 190, 197))
voto_nulo <- as.integer(substr(municipio, 198, 205))
voto_a_candidatura <- substr(municipio, 206, 213)
numero_escaños <- as.integer(substr(municipio, 214, 216))
votos_afirmativos_referendum <- as.integer(substr(municipio, 217, 224))
votos_negativos_referendum <- as.integer(substr(municipio, 225, 232))
# Agregar los valores extraídos al dataframe
df <- rbind(df, data.frame(tipo_eleccion, año, mes, numero_vuelta, codigo_CCAA,
codigo_provincia, codigo_municipio, num_distrito_municipal,
nombre, codigo_distrito_electoral, codigo_partido_judicial,
codigo_diputacion_provincial, codigo_comarca, pablacion_derecho,
numero_mesas, censo_INE, censo_escrutinio, censo_CERE,
total_votantes_CERE, votantes_primer_avance,
votantes_segundo_avance, voto_blanco, voto_a_candidatura,
numero_escaños, votos_afirmativos_referendum,
votos_negativos_referendum))
}
return(df)
}
leer_datos('02', '2019', '04', 'tota')
leer_datos('congreso', '2019', '04', 'tota')
leer_datos('congreso', '2019', '04', 'mesa')
library(readxl)
leer_datos('congreso', '2019', '04', 'mesa')
tabla <- read_excel(tablas_path, sheet = sheet_name)
leer_datos <- function(tipo_eleccion, año, mes, ambito,directorio = "./descargas/",tabla='05'){
directorio <- descargar_Archivo(tipo_eleccion,año,mes,ambito,directorio)
tablas_path <- system.file("extdata", "tablas_finales_2.xlsx", package = "yourpackage")
if( tabla == '11'|| tabla == '12'){
sheet_name = paste(tabla, "04aamm.DAT", sep = "")
}else{
sheet_name = paste(tabla, "xxaamm.DAT", sep = "")
}
tabla <- read_excel(tablas_path, sheet = sheet_name)
print(tabla)
return(FALSE)
ultimos_dos_digitos <- substr(año, nchar(año) - 1, nchar(año))
ruta<- paste(directorio,"05",tipo_eleccion,ultimos_dos_digitos,mes,".DAT",sep="")
print(ruta)
file_content <- readLines(ruta, encoding = 'UTF-8')
file_content <- iconv(file_content, "latin1", "UTF-8")
# Inicializar el dataframe vacío
df <- data.frame(tipo_eleccion = integer(),
año = integer(),
mes = integer(),
numero_vuelta = integer(),
codigo_CCAA = integer(),
codigo_provincia = integer(),
codigo_municipio = integer(),
num_distrito_municipal = integer(),
nombre = character(),
codigo_distrito_electoral = integer(),
codigo_partido_judicial = integer(),
codigo_diputacion_provincial = integer(),
codigo_comarca = integer(),
pablacion_derecho = integer(),
numero_mesas = integer(),
censo_INE = integer(),
censo_escrutinio = integer(),
censo_CERE = character(),
total_votantes_CERE = integer(),
votantes_primer_avance = integer(),
votantes_segundo_avance = integer(),
voto_blanco = integer(),
voto_nulo = integer(),
voto_a_candidatura = character(),
numero_escaños = integer(),
votos_afirmativos_referendum = integer(),
votos_negativos_referendum = integer(),
stringsAsFactors = FALSE)
# Recorrer cada línea en file_content
for(municipio in file_content) {
# Extraer valores de cada línea y asignar a las columnas correspondientes
tipo_eleccion <- as.integer(substr(municipio, 1, 2))
año <- as.integer(substr(municipio, 3, 6))
mes <- as.integer(substr(municipio, 7, 8))
numero_vuelta <- as.integer(substr(municipio, 9, 9))
codigo_CCAA <- as.integer(substr(municipio, 10, 11))
codigo_provincia <- as.integer(substr(municipio, 12, 13))
codigo_municipio <- as.integer(substr(municipio, 14, 16))
num_distrito_municipal <- as.integer(substr(municipio, 17, 18))
nombre <- substr(municipio, 19, 118)
codigo_distrito_electoral <- as.integer(substr(municipio, 119, 119))
codigo_partido_judicial <- as.integer(substr(municipio, 120, 122))
codigo_diputacion_provincial <- as.integer(substr(municipio, 123, 125))
codigo_comarca <- as.integer(substr(municipio, 126, 128))
pablacion_derecho <- as.integer(substr(municipio, 129, 136))
numero_mesas <- as.integer(substr(municipio, 137, 141))
censo_INE <- as.integer(substr(municipio, 142, 149))
censo_escrutinio <- as.integer(substr(municipio, 150, 157))
censo_CERE <- substr(municipio, 158, 165)
total_votantes_CERE <- as.integer(substr(municipio, 166, 173))
votantes_primer_avance <- as.integer(substr(municipio, 174, 181))
votantes_segundo_avance <- as.integer(substr(municipio, 182, 189))
voto_blanco <- as.integer(substr(municipio, 190, 197))
voto_nulo <- as.integer(substr(municipio, 198, 205))
voto_a_candidatura <- substr(municipio, 206, 213)
numero_escaños <- as.integer(substr(municipio, 214, 216))
votos_afirmativos_referendum <- as.integer(substr(municipio, 217, 224))
votos_negativos_referendum <- as.integer(substr(municipio, 225, 232))
# Agregar los valores extraídos al dataframe
df <- rbind(df, data.frame(tipo_eleccion, año, mes, numero_vuelta, codigo_CCAA,
codigo_provincia, codigo_municipio, num_distrito_municipal,
nombre, codigo_distrito_electoral, codigo_partido_judicial,
codigo_diputacion_provincial, codigo_comarca, pablacion_derecho,
numero_mesas, censo_INE, censo_escrutinio, censo_CERE,
total_votantes_CERE, votantes_primer_avance,
votantes_segundo_avance, voto_blanco, voto_a_candidatura,
numero_escaños, votos_afirmativos_referendum,
votos_negativos_referendum))
}
return(df)
}
library(readxl)
leer_datos('congreso', '2019', '04', 'mesa')
leer_datos <- function(tipo_eleccion, año, mes, ambito,directorio = "./descargas/",tabla='05'){
directorio <- descargar_Archivo(tipo_eleccion,año,mes,ambito,directorio)
tablas_path <- system.file("extdata", "tablas_finales_2.xlsx", package = "yourpackage")
print(tablas_path)
if( tabla == '11'|| tabla == '12'){
sheet_name = paste(tabla, "04aamm.DAT", sep = "")
}else{
sheet_name = paste(tabla, "xxaamm.DAT", sep = "")
}
tabla <- read_excel(tablas_path, sheet = sheet_name)
print(tabla)
return(FALSE)
ultimos_dos_digitos <- substr(año, nchar(año) - 1, nchar(año))
ruta<- paste(directorio,"05",tipo_eleccion,ultimos_dos_digitos,mes,".DAT",sep="")
print(ruta)
file_content <- readLines(ruta, encoding = 'UTF-8')
file_content <- iconv(file_content, "latin1", "UTF-8")
# Inicializar el dataframe vacío
df <- data.frame(tipo_eleccion = integer(),
año = integer(),
mes = integer(),
numero_vuelta = integer(),
codigo_CCAA = integer(),
codigo_provincia = integer(),
codigo_municipio = integer(),
num_distrito_municipal = integer(),
nombre = character(),
codigo_distrito_electoral = integer(),
codigo_partido_judicial = integer(),
codigo_diputacion_provincial = integer(),
codigo_comarca = integer(),
pablacion_derecho = integer(),
numero_mesas = integer(),
censo_INE = integer(),
censo_escrutinio = integer(),
censo_CERE = character(),
total_votantes_CERE = integer(),
votantes_primer_avance = integer(),
votantes_segundo_avance = integer(),
voto_blanco = integer(),
voto_nulo = integer(),
voto_a_candidatura = character(),
numero_escaños = integer(),
votos_afirmativos_referendum = integer(),
votos_negativos_referendum = integer(),
stringsAsFactors = FALSE)
# Recorrer cada línea en file_content
for(municipio in file_content) {
# Extraer valores de cada línea y asignar a las columnas correspondientes
tipo_eleccion <- as.integer(substr(municipio, 1, 2))
año <- as.integer(substr(municipio, 3, 6))
mes <- as.integer(substr(municipio, 7, 8))
numero_vuelta <- as.integer(substr(municipio, 9, 9))
codigo_CCAA <- as.integer(substr(municipio, 10, 11))
codigo_provincia <- as.integer(substr(municipio, 12, 13))
codigo_municipio <- as.integer(substr(municipio, 14, 16))
num_distrito_municipal <- as.integer(substr(municipio, 17, 18))
nombre <- substr(municipio, 19, 118)
codigo_distrito_electoral <- as.integer(substr(municipio, 119, 119))
codigo_partido_judicial <- as.integer(substr(municipio, 120, 122))
codigo_diputacion_provincial <- as.integer(substr(municipio, 123, 125))
codigo_comarca <- as.integer(substr(municipio, 126, 128))
pablacion_derecho <- as.integer(substr(municipio, 129, 136))
numero_mesas <- as.integer(substr(municipio, 137, 141))
censo_INE <- as.integer(substr(municipio, 142, 149))
censo_escrutinio <- as.integer(substr(municipio, 150, 157))
censo_CERE <- substr(municipio, 158, 165)
total_votantes_CERE <- as.integer(substr(municipio, 166, 173))
votantes_primer_avance <- as.integer(substr(municipio, 174, 181))
votantes_segundo_avance <- as.integer(substr(municipio, 182, 189))
voto_blanco <- as.integer(substr(municipio, 190, 197))
voto_nulo <- as.integer(substr(municipio, 198, 205))
voto_a_candidatura <- substr(municipio, 206, 213)
numero_escaños <- as.integer(substr(municipio, 214, 216))
votos_afirmativos_referendum <- as.integer(substr(municipio, 217, 224))
votos_negativos_referendum <- as.integer(substr(municipio, 225, 232))
# Agregar los valores extraídos al dataframe
df <- rbind(df, data.frame(tipo_eleccion, año, mes, numero_vuelta, codigo_CCAA,
codigo_provincia, codigo_municipio, num_distrito_municipal,
nombre, codigo_distrito_electoral, codigo_partido_judicial,
codigo_diputacion_provincial, codigo_comarca, pablacion_derecho,
numero_mesas, censo_INE, censo_escrutinio, censo_CERE,
total_votantes_CERE, votantes_primer_avance,
votantes_segundo_avance, voto_blanco, voto_a_candidatura,
numero_escaños, votos_afirmativos_referendum,
votos_negativos_referendum))
}
return(df)
}
library(readxl)
leer_datos('congreso', '2019', '04', 'mesa')
directorio <- descargar_Archivo(tipo_eleccion,año,mes,ambito,directorio)
tablas_path <- system.file("extdata", "tablas_finales_2.xlsx", package = "paquete.elecciones")
leer_datos <- function(tipo_eleccion, año, mes, ambito,directorio = "./descargas/",tabla='05'){
directorio <- descargar_Archivo(tipo_eleccion,año,mes,ambito,directorio)
tablas_path <- system.file("extdata", "tablas_finales_2.xlsx", package = "paquete.elecciones")
print(tablas_path)
if( tabla == '11'|| tabla == '12'){
sheet_name = paste(tabla, "04aamm.DAT", sep = "")
}else{
sheet_name = paste(tabla, "xxaamm.DAT", sep = "")
}
tabla <- read_excel(tablas_path, sheet = sheet_name)
print(tabla)
return(FALSE)
ultimos_dos_digitos <- substr(año, nchar(año) - 1, nchar(año))
ruta<- paste(directorio,"05",tipo_eleccion,ultimos_dos_digitos,mes,".DAT",sep="")
print(ruta)
file_content <- readLines(ruta, encoding = 'UTF-8')
file_content <- iconv(file_content, "latin1", "UTF-8")
# Inicializar el dataframe vacío
df <- data.frame(tipo_eleccion = integer(),
año = integer(),
mes = integer(),
numero_vuelta = integer(),
codigo_CCAA = integer(),
codigo_provincia = integer(),
codigo_municipio = integer(),
num_distrito_municipal = integer(),
nombre = character(),
codigo_distrito_electoral = integer(),
codigo_partido_judicial = integer(),
codigo_diputacion_provincial = integer(),
codigo_comarca = integer(),
pablacion_derecho = integer(),
numero_mesas = integer(),
censo_INE = integer(),
censo_escrutinio = integer(),
censo_CERE = character(),
total_votantes_CERE = integer(),
votantes_primer_avance = integer(),
votantes_segundo_avance = integer(),
voto_blanco = integer(),
voto_nulo = integer(),
voto_a_candidatura = character(),
numero_escaños = integer(),
votos_afirmativos_referendum = integer(),
votos_negativos_referendum = integer(),
stringsAsFactors = FALSE)
# Recorrer cada línea en file_content
for(municipio in file_content) {
# Extraer valores de cada línea y asignar a las columnas correspondientes
tipo_eleccion <- as.integer(substr(municipio, 1, 2))
año <- as.integer(substr(municipio, 3, 6))
mes <- as.integer(substr(municipio, 7, 8))
numero_vuelta <- as.integer(substr(municipio, 9, 9))
codigo_CCAA <- as.integer(substr(municipio, 10, 11))
codigo_provincia <- as.integer(substr(municipio, 12, 13))
codigo_municipio <- as.integer(substr(municipio, 14, 16))
num_distrito_municipal <- as.integer(substr(municipio, 17, 18))
nombre <- substr(municipio, 19, 118)
codigo_distrito_electoral <- as.integer(substr(municipio, 119, 119))
codigo_partido_judicial <- as.integer(substr(municipio, 120, 122))
codigo_diputacion_provincial <- as.integer(substr(municipio, 123, 125))
codigo_comarca <- as.integer(substr(municipio, 126, 128))
pablacion_derecho <- as.integer(substr(municipio, 129, 136))
numero_mesas <- as.integer(substr(municipio, 137, 141))
censo_INE <- as.integer(substr(municipio, 142, 149))
censo_escrutinio <- as.integer(substr(municipio, 150, 157))
censo_CERE <- substr(municipio, 158, 165)
total_votantes_CERE <- as.integer(substr(municipio, 166, 173))
votantes_primer_avance <- as.integer(substr(municipio, 174, 181))
votantes_segundo_avance <- as.integer(substr(municipio, 182, 189))
voto_blanco <- as.integer(substr(municipio, 190, 197))
voto_nulo <- as.integer(substr(municipio, 198, 205))
voto_a_candidatura <- substr(municipio, 206, 213)
numero_escaños <- as.integer(substr(municipio, 214, 216))
votos_afirmativos_referendum <- as.integer(substr(municipio, 217, 224))
votos_negativos_referendum <- as.integer(substr(municipio, 225, 232))
# Agregar los valores extraídos al dataframe
df <- rbind(df, data.frame(tipo_eleccion, año, mes, numero_vuelta, codigo_CCAA,
codigo_provincia, codigo_municipio, num_distrito_municipal,
nombre, codigo_distrito_electoral, codigo_partido_judicial,
codigo_diputacion_provincial, codigo_comarca, pablacion_derecho,
numero_mesas, censo_INE, censo_escrutinio, censo_CERE,
total_votantes_CERE, votantes_primer_avance,
votantes_segundo_avance, voto_blanco, voto_a_candidatura,
numero_escaños, votos_afirmativos_referendum,
votos_negativos_referendum))
}
return(df)
}
library(readxl)
leer_datos('congreso', '2019', '04', 'mesa')
getwd()
devtools::install(".")
devtools::install("C:/Users/nacho/OneDrive/Escritorio/TFG ESTADISTICA/paquete.elecciones")
if (!requireNamespace("devtools", quietly = TRUE)) {
install.packages("devtools")
}
library(paquete.elecciones)
leer_datos('congreso', '2019', '04', 'mesa')
system.file("extdata", "tablas_finales_2.xlsx", package = "paquete.elecciones")
system.file("extdata", "tablas_finales_2.xlsx", package = "paquete.elecciones")
system.file("inst",extdata", "tablas_finales_2.xlsx", package = "paquete.elecciones")
system.file("inst","extdata", "tablas_finales_2.xlsx", package = "paquete.elecciones")
devtools::install("C:/Users/nacho/OneDrive/Escritorio/TFG ESTADISTICA/paquete.elecciones")
devtools::install("C:/Users/nacho/OneDrive/Escritorio/TFG ESTADISTICA/paquete.elecciones")
remove.packages("paquete.elecciones")
devtools::install("C:/Users/nacho/OneDrive/Escritorio/TFG ESTADISTICA/paquete.elecciones")
setwd("..")
getwd()
devtools::install("C:/Users/nacho/OneDrive/Escritorio/TFG ESTADISTICA/paquete.elecciones")
library(usethis)
create_package("C:/Users/nacho/OneDrive/Escritorio/TFG ESTADISTICA/paquete.elecciones")
create_package("C:/Users/nacho/OneDrive/Escritorio/TFG ESTADISTICA/paquete.elecciones")
create_package("C:/Users/nacho/OneDrive/Escritorio/TFG ESTADISTICA/paquete.elecciones")
getwd()
create_package("C:/Users/nacho/OneDrive/Escritorio/TFG ESTADISTICA/paquete.elecciones")
unlink(tempdir(), recursive = TRUE)
create_package("C:/Users/nacho/OneDrive/Escritorio/TFG ESTADISTICA/paquete.elecciones")
